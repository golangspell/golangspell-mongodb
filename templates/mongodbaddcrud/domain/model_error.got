package domain

// GenericError holds the info about an error occurred during the application execution
type GenericError struct {
	Code int `json:"code"`

	Message string `json:"message"`
}

func (e GenericError) Error() string {
	return e.Message
}

//AlreadyExistsError represents an specialized Already Exists Error
type AlreadyExistsError struct {
	GenericError
}

//AlreadyExists builds an specialized Already Exists Error
func AlreadyExists(message string) AlreadyExistsError {
	return AlreadyExistsError{Code: 409, Message: message}
}

//InternalError builds an specialized Internal Error
func InternalError(message string) GenericError {
	return GenericError{Code: 500, Message: message}
}

//ConstraintViolationError represents an specialized Constraint Violation Error
type ConstraintViolationError struct {
	GenericError
}

//ConstraintViolation builds an specialized Constraint Violation Error
func ConstraintViolation(message string) ConstraintViolationError {
	return ConstraintViolationError{Code: 400, Message: message}
}

//NotFoundError represents an specialized Not Found Error
type NotFoundError struct {
	GenericError
}

//NotFound builds an specialized Not Found Error
func NotFound(message string) NotFoundError {
	return NotFoundError{Code: 404, Message: message}
}
